/**************************************************************************************************\
 *** 
 *** System              : TargetLink Simulation RTE
 *** ECU                 : TL_ECU
 *** Configuration       : NONE
 *** Codefile            : Rte_Type.h
 ***
 *** Generated by the SystemDesk RTE code generator
 *** Generation date: 2024-07-04 07:50:57
 ***
 *** SystemDesk version  : 4.3.0.314576
 *** Copyright (c) 2016 dSPACE GmbH
\**************************************************************************************************/

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

/*----------------------------------------------------------------------------*\
  DEFINES (OPT)
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  INCLUDES
\*----------------------------------------------------------------------------*/

#include "Platform_Types.h"
#include "Std_Types.h"
/*----------------------------------------------------------------------------*\
  DEFINES
\*----------------------------------------------------------------------------*/


/* Error check macros. */
/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_IsInfrastructureError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for infrastructure errors.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_IsInfrastructureError(status) (((status) & 128U) != 0) 

/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_HasOverlayedError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for an overlayed error.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_HasOverlayedError(status) (((status) & 64U) != 0) 

/*************************************************************************************************\
 ***  PARAMETERIZED MACRO:
 ***      Rte_ApplicationError
 ***
 ***  DESCRIPTION:
 ***      Enables an application to check the return value of an API for application errors.
 ***
 ***  PARAMETERS:
 ***      Type               Name                Description
 ***      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
 ***      Std_ReturnType     status              
 ***
 ***  RETURNS:
 ***      boolean
 ***
 ***  SETTINGS:
 ***
\*************************************************************************************************/
#define Rte_ApplicationError(status) ((status) & 63U) 

/*----------------------------------------------------------------------------*\
  TYPEDEFS
\*----------------------------------------------------------------------------*/


 /* The AUTOSAR type for booleans */
typedef boolean Boolean;

 /* The AUTOSAR type for 4 bit unsigned integer */
typedef uint8 UInt4;

 /* The AUTOSAR type for 4 bit signed integer */
typedef sint8 SInt4;

 /* The AUTOSAR type for 8 bit unsigned integer */
typedef uint8 UInt8;

 /* The AUTOSAR type for 8 bit signed integer */
typedef sint8 SInt8;

 /* The AUTOSAR type for 16 bit unsigned integer */
typedef uint16 UInt16;

 /* The AUTOSAR type for 16 bit signed integer */
typedef sint16 SInt16;

 /* The AUTOSAR type for 32 bit unsigned integer */
typedef uint32 UInt32;

 /* The AUTOSAR type for 32 bit signed integer */
typedef sint32 SInt32;

 /* The AUTOSAR type for 32 bit floating-point number */
typedef float32 Float_with_NaN;

 /* The AUTOSAR type for 32 bit floating-point number */
typedef float32 Float;

 /* The AUTOSAR type for 64 bit floating-point number */
typedef float64 Double_with_NaN;

 /* The AUTOSAR type for 64 bit floating-point number */
typedef float64 Double;

 /* The AUTOSAR type for 8 bit character */
typedef uint8 Char8;

 /* The AUTOSAR type for 16 bit character */
typedef uint16 Char16;
typedef boolean Bool;
typedef sint8 Int8;
typedef sint16 Int16;
typedef sint32 Int32;
typedef float32 Float32;
typedef float64 Float64;

 /* Data type for data elements without status */
typedef struct {
   sint16 value;
} Rte_DE_sint16;
/*----------------------------------------------------------------------------*\
  ENUMS
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  VARIABLES
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*----------------------------------------------------------------------------*/


#endif/*RTE_TYPE_H */
/*----------------------------------------------------------------------------*\
 END OF FILE
\*----------------------------------------------------------------------------*/
